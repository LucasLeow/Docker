== 1 Intro to Docker ==
    - Creates containers to run apps / servers in isolated environment
        - Node app (app server)
        - React app (app server)
        - MongoDB (db server)
        etc.

    -- Significance in team development --
        - developer 1 making app in NodeJS environment
            - node version 17
            - relevant environment variables
            - dependencies / runtime env
            etc.
    
        - dev. 1 push everything into Docker container
        - dev. 1 can pass container to other devs
        - other devs install required content in container
        (Save a lot of set-up time)

    - Docker:
        - tool for creating / managing containers
        - Containers are also easier to push to production server
            - don't need to configure server, already within container


    -- Container vs VMs --
        - VM
            - has own full OS
            - typically slower

        - Containers
            - share host's OS (less bloated)
            - typically quicker
            - more lightweight
    
        - depend on use case, sometimes VM may also be better


== 2 Installing Docker ==
    - Install the docker engine
        - Running Docker on Windows might not be as smooth
        - require WSL 2 Backend
            - Window Subsystem for Linux (Run Linux env on Windows without VM)
                - allow to run Docker on Windows

    - Once installed, must ensure Docker running to be able to use
        - check btm right of screen to see if <Whale> icon running 

== 3 Docker Images & Containers ==
    
    -- Docker Images --
        - blueprint for containers
        - have its own file system independent of computer
        - read-only, once image created, cannot be edited
            - if want to change anything, need to create new image
        

        Contains the following:
            - Runtime environment (specific node version etc.)
            - Application code(s)
            - Dependencies required
            - Extra configuration (env variables etc.)
            - Commands

    -- Docker Containers --
        - Runnable instances of an image
        - when running images, it creates a container
        - also known as isolated process
            - run independently from any other process on computer
            - being run in "own box" somewhere in computer
            - completely isolated from any other process

    -- Significance --
        - Can just share image to any other dev who want to run app
            - other dev run image, creating container
            - their own software versions does not matter
                - the image contain all the files / dependencies required
        - Container will run similar regardless of any computers

        
    